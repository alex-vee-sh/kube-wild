name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Build matrices
        run: |
          set -e
          mkdir -p dist
          for os in linux darwin windows; do
            for arch in amd64 arm64; do
              echo "Building $os/$arch"
              BIN=kubectl-wild
              EXT=""
              if [ "$os" = "windows" ]; then EXT=".exe"; fi
              CGO_ENABLED=0 GOOS=$os GOARCH=$arch GO111MODULE=on go build -o ${BIN}${EXT} .
              tar -czf dist/kubectl-wild_${os}_${arch}.tar.gz ${BIN}${EXT} LICENSE
              rm -f kubectl-wild
            done
          done
      - name: Compute checksums
        run: |
          cd dist
          for f in *.tar.gz; do
            sha256sum "$f" >> SHA256SUMS.txt
          done
          awk '{print $1, $2}' SHA256SUMS.txt
      - name: Export SHAs to env
        run: |
          LNX_AMD=$(sha256sum dist/kubectl-wild_linux_amd64.tar.gz | awk '{print $1}')
          LNX_ARM=$(sha256sum dist/kubectl-wild_linux_arm64.tar.gz | awk '{print $1}')
          DAR_AMD=$(sha256sum dist/kubectl-wild_darwin_amd64.tar.gz | awk '{print $1}')
          DAR_ARM=$(sha256sum dist/kubectl-wild_darwin_arm64.tar.gz | awk '{print $1}')
          WIN_AMD=$(sha256sum dist/kubectl-wild_windows_amd64.tar.gz | awk '{print $1}')
          WIN_ARM=$(sha256sum dist/kubectl-wild_windows_arm64.tar.gz | awk '{print $1}')
          echo "SHA_LINUX_AMD64=${LNX_AMD}" >> $GITHUB_ENV
          echo "SHA_LINUX_ARM64=${LNX_ARM}" >> $GITHUB_ENV
          echo "SHA_DARWIN_AMD64=${DAR_AMD}" >> $GITHUB_ENV
          echo "SHA_DARWIN_ARM64=${DAR_ARM}" >> $GITHUB_ENV
          echo "SHA_WINDOWS_AMD64=${WIN_AMD}" >> $GITHUB_ENV
          echo "SHA_WINDOWS_ARM64=${WIN_ARM}" >> $GITHUB_ENV
      - name: Create release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/kubectl-wild_linux_amd64.tar.gz
            dist/kubectl-wild_linux_arm64.tar.gz
            dist/kubectl-wild_darwin_amd64.tar.gz
            dist/kubectl-wild_darwin_arm64.tar.gz
            dist/kubectl-wild_windows_amd64.tar.gz
            dist/kubectl-wild_windows_arm64.tar.gz
            dist/SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Derive tag name
        run: echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: Wait for release assets to be available
        run: |
          set -e
          assets=(kubectl-wild_darwin_amd64.tar.gz kubectl-wild_darwin_arm64.tar.gz kubectl-wild_linux_amd64.tar.gz kubectl-wild_linux_arm64.tar.gz kubectl-wild_windows_amd64.tar.gz kubectl-wild_windows_arm64.tar.gz)
          for i in {1..30}; do
            ok=1
            for f in "${assets[@]}"; do
              code=$(curl -s -o /dev/null -w "%{http_code}" -I "https://github.com/alex-vee-sh/kube-wild/releases/download/${TAG_NAME}/${f}")
              if [ "$code" != "200" ]; then ok=0; fi
            done
            if [ "$ok" = "1" ]; then echo "All assets available"; break; fi
            echo "Assets not ready yet. Retrying..."; sleep 5
          done
      - name: Generate krew manifest (artifact)
        run: |
          cat > krew/wild.yaml <<EOF
          apiVersion: krew.googlecontainertools.github.com/v1alpha2
          kind: Plugin
          metadata:
            name: wild
          spec:
            version: ${TAG_NAME}
            homepage: https://github.com/alex-vee-sh/kube-wild
            shortDescription: "Use wildcard patterns for kubectl get/describe/delete"
            description: |
              kubectl-wild adds simple wildcard matching and safety features for resource names,
              then delegates to kubectl for output and actions.
            platforms:
            - selector:
                matchLabels:
                  os: darwin
                  arch: amd64
              uri: https://github.com/alex-vee-sh/kube-wild/releases/download/${TAG_NAME}/kubectl-wild_darwin_amd64.tar.gz
              sha256: "${SHA_DARWIN_AMD64}"
              bin: kubectl-wild
              files:
              - from: "kubectl-wild"
                to: "kubectl-wild"
              - from: "LICENSE"
                to: "LICENSE"
            - selector:
                matchLabels:
                  os: darwin
                  arch: arm64
              uri: https://github.com/alex-vee-sh/kube-wild/releases/download/${TAG_NAME}/kubectl-wild_darwin_arm64.tar.gz
              sha256: "${SHA_DARWIN_ARM64}"
              bin: kubectl-wild
              files:
              - from: "kubectl-wild"
                to: "kubectl-wild"
              - from: "LICENSE"
                to: "LICENSE"
            - selector:
                matchLabels:
                  os: linux
                  arch: amd64
              uri: https://github.com/alex-vee-sh/kube-wild/releases/download/${TAG_NAME}/kubectl-wild_linux_amd64.tar.gz
              sha256: "${SHA_LINUX_AMD64}"
              bin: kubectl-wild
              files:
              - from: "kubectl-wild"
                to: "kubectl-wild"
              - from: "LICENSE"
                to: "LICENSE"
            - selector:
                matchLabels:
                  os: linux
                  arch: arm64
              uri: https://github.com/alex-vee-sh/kube-wild/releases/download/${TAG_NAME}/kubectl-wild_linux_arm64.tar.gz
              sha256: "${SHA_LINUX_ARM64}"
              bin: kubectl-wild
              files:
              - from: "kubectl-wild"
                to: "kubectl-wild"
              - from: "LICENSE"
                to: "LICENSE"
            - selector:
                matchLabels:
                  os: windows
                  arch: amd64
              uri: https://github.com/alex-vee-sh/kube-wild/releases/download/${TAG_NAME}/kubectl-wild_windows_amd64.tar.gz
              sha256: "${SHA_WINDOWS_AMD64}"
              bin: kubectl-wild.exe
              files:
              - from: "kubectl-wild.exe"
                to: "kubectl-wild.exe"
              - from: "LICENSE"
                to: "LICENSE"
            - selector:
                matchLabels:
                  os: windows
                  arch: arm64
              uri: https://github.com/alex-vee-sh/kube-wild/releases/download/${TAG_NAME}/kubectl-wild_windows_arm64.tar.gz
              sha256: "${SHA_WINDOWS_ARM64}"
              bin: kubectl-wild.exe
              files:
              - from: "kubectl-wild.exe"
                to: "kubectl-wild.exe"
              - from: "LICENSE"
                to: "LICENSE"
          EOF
      - name: Upload krew manifest artifact
        uses: actions/upload-artifact@v4
        with:
          name: krew-manifest-${{ env.TAG_NAME }}
          path: krew/wild.yaml
