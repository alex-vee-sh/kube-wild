name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Build matrices
        run: |
          mkdir -p dist
          for os in linux darwin; do
            for arch in amd64 arm64; do
              echo "Building $os/$arch"
              GOOS=$os GOARCH=$arch GO111MODULE=on go build -o kubectl-wild .
              tar -czf dist/kubectl-wild_${os}_${arch}.tar.gz kubectl-wild LICENSE
              rm -f kubectl-wild
            done
          done
      - name: Compute checksums
        run: |
          cd dist
          for f in *.tar.gz; do
            sha256sum "$f" >> SHA256SUMS.txt
          done
          awk '{print $1, $2}' SHA256SUMS.txt
      - name: Inject SHAs into .krew.yaml
        run: |
          LNX_AMD=$(sha256sum dist/kubectl-wild_linux_amd64.tar.gz | awk '{print $1}')
          LNX_ARM=$(sha256sum dist/kubectl-wild_linux_arm64.tar.gz | awk '{print $1}')
          DAR_AMD=$(sha256sum dist/kubectl-wild_darwin_amd64.tar.gz | awk '{print $1}')
          DAR_ARM=$(sha256sum dist/kubectl-wild_darwin_arm64.tar.gz | awk '{print $1}')
          sed -i.bak \
            -e "s/__SHA_DARWIN_AMD64__/${DAR_AMD}/" \
            -e "s/__SHA_DARWIN_ARM64__/${DAR_ARM}/" \
            -e "s/__SHA_LINUX_AMD64__/${LNX_AMD}/" \
            -e "s/__SHA_LINUX_ARM64__/${LNX_ARM}/" \
            .krew.yaml
      - name: Create release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/kubectl-wild_linux_amd64.tar.gz
            dist/kubectl-wild_linux_arm64.tar.gz
            dist/kubectl-wild_darwin_amd64.tar.gz
            dist/kubectl-wild_darwin_arm64.tar.gz
            dist/SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Derive tag name
        run: echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: Wait for release assets to be available
        run: |
          set -e
          assets=(kubectl-wild_darwin_amd64.tar.gz kubectl-wild_darwin_arm64.tar.gz kubectl-wild_linux_amd64.tar.gz kubectl-wild_linux_arm64.tar.gz)
          for i in {1..30}; do
            ok=1
            for f in "${assets[@]}"; do
              code=$(curl -s -o /dev/null -w "%{http_code}" -I "https://github.com/alex-vee-sh/kube-wild/releases/download/${TAG_NAME}/${f}")
              if [ "$code" != "200" ]; then ok=0; fi
            done
            if [ "$ok" = "1" ]; then echo "All assets available"; break; fi
            echo "Assets not ready yet. Retrying..."; sleep 5
          done
      - name: Update new version in krew-index
        uses: rajatjindal/krew-release-bot@v0.0.46
        with:
          krew_template_file: .krew.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.KREW_RELEASE_BOT_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
          GITHUB_REF: ${{ github.ref }}
